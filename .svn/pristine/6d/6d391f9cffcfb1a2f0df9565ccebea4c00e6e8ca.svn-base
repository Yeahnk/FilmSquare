package member.servive;

import java.io.File;
import java.io.IOException;
import java.util.Collection;
import java.util.List;
import java.util.UUID;

import javax.servlet.http.Part;

import member.dao.AtchFileDaoImpl;
import member.dao.IAtchFileDao;
import member.vo.AtchFileVO;
import member.vo.MemberVO;



public class AtchFileServiceImpl implements IAtchFileService {
	
	
	private static final String UPLOAD_DIR = "upload_files";
	
	private IAtchFileDao fileDao;
	
	private static IAtchFileService fileService;
	
	
	private AtchFileServiceImpl() {
		fileDao = AtchFileDaoImpl.getInstance();
	}
	
	public static IAtchFileService getInstance() {
		if(fileService == null) {
			fileService = new AtchFileServiceImpl();
		}
		
		return fileService;
	}
	
	@Override
	public AtchFileVO saveAtchFileList(Collection<Part> parts) {
		// 웹애플리케이션 루트 디렉토리를 기준으로 업로드 경로 설정하기
		String uploadPath = "d:/D_Other/"+ UPLOAD_DIR;
		File uploadDir = new File(uploadPath);
		if (!uploadDir.exists()) {
			uploadDir.mkdir();
		}
		
		
		boolean isFirstFile = true; // 첫번째 파일 여부 체크
		AtchFileVO atchFileVO = null;
		
		for(Part part : parts) {
		
			String fileName = part.getSubmittedFileName(); //파일이름
			
			if(fileName != null && !fileName.equals("")) {
				
				if(isFirstFile) {
					isFirstFile = false;
					
					// 파일기본정보 저장하기
					
					atchFileVO = new AtchFileVO();
					fileDao.insertAtchFile(atchFileVO);
					
				}
				
				
				//파일 세부정보 저장하기
				
				String orignFileName = fileName;// 원본파일명
				long fileSize = part.getSize(); //파일 사이자
				String saveFileName=""; //저장파일명
				String saveFilePath = ""; //저장파일 경로
				
				saveFileName = UUID.randomUUID().toString().replace("-","");
				saveFilePath = uploadPath + "/" + saveFileName;
				
				// 업로드 파일 저장하기
				try {
					part.write(saveFilePath);
				} catch (IOException ex) {
					// TODO Auto-generated catch block
					throw new RuntimeException("업로드 파일 저장중 예외발생",ex);
				}
				
				//확장자 추출
				String fileExt = orignFileName.lastIndexOf(".")< 0 ? "":
					orignFileName.substring(orignFileName.lastIndexOf(".")+1);
				
				atchFileVO.setMempStreNm(saveFileName);
				atchFileVO.setMempSize(fileSize);
				atchFileVO.setMempOrgnNm(orignFileName);
				atchFileVO.setMempExtsn(fileExt);
				
				//파일 세부정보 저장하기
				fileDao.insertAtchFileDetail(atchFileVO);
				
				try {
					part.delete();// 임시 업로드 파일 삭제하기
					
				} catch (IOException e) {
					throw new RuntimeException("업로드 파일 삭제중 예외발생",e);
				} 
			}
		}
		return atchFileVO;
	}

	@Override
	public List<AtchFileVO> getAtchFileList(AtchFileVO atchFileVO) {
		List<AtchFileVO> atchFileList = fileDao.getAtchFileList(atchFileVO);
		return atchFileList;
	}

	@Override
	public AtchFileVO getAtchFileDetail(AtchFileVO atchFileVO) {
		
		return fileDao.getAtchFileDetail(atchFileVO);
	}
	
	@Override
	public AtchFileVO getMember(String memId) {

		AtchFileVO mv = fileDao.getMember(memId);
		return mv;
	}

	
}
