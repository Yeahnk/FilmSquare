package member.controller;

import java.io.IOException;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import member.servive.IMemberService;
import member.servive.MemberServiceImpl;
import member.vo.MemberVO;

@WebServlet("/updateIntro.do")
public class UpdateController extends HttpServlet {
    @Override
    protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
        // doGet 메서드가 없는 경우 그냥 주석처리해도 됩니다.
    }

    @Override
    protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
        try {
            String memId = req.getParameter("memId");
            String memIntro = req.getParameter("newIntro");

            // 보안 검사: memIntro과 memId가 null 또는 빈 문자열인 경우 에러 처리
            if (memIntro == null || memIntro.trim().isEmpty() || memId == null || memId.trim().isEmpty()) {
                throw new IllegalArgumentException("유효하지 않은 입력 값이 있습니다.");
            }

            System.out.println(memIntro);
            System.out.println(memId);

            // 여기서 mv 객체 생성과 memService 호출은 필요한 로직에 맞게 수정
            MemberVO mv = new MemberVO();
            mv.setMemId(memId); // 추가: memId를 설정
            mv.setMemIntro(memIntro);

            IMemberService memService = MemberServiceImpl.getInstance();
            int cnt = memService.updateIntro(mv);
            
            
            System.out.println("cnt>>>>cont: " + cnt);
            
            
            String msg = "";

            if (cnt > 0) {
                msg = "성공";
                req.setAttribute("mv", mv);
                req.getRequestDispatcher("/views/member/mypage.jsp").forward(req, resp);
            } else {
                msg = "실패";
                resp.sendRedirect(req.getContextPath() + "/views/member/mypage.jsp?msg=" + msg);
            }

            // 에러 발생시에는 에러 메시지를 전달하도록 수정
        } catch (Exception e) {
            e.printStackTrace();
            resp.sendRedirect(req.getContextPath() + "/views/member/mypage.jsp?msg=에러가 발생했습니다.");

            // 에러 발생시에는 에러 메시지를 전달하도록 수정
        }
    }
}
